@startuml

class Post {
    -int $id
    -string $title
    -string $chapo
    -string $content
    -string $author
    -int $userId
    -DateTime $updatedAt

    +int getId()
    +void setId(int $id)
    +string getTitle()
    +void setTitle(string $title)
    +string getChapo()
    +void setChapo(string $chapo)
    +string getContent()
    +void setContent(string $content)
    +string getAuthor()
    +void setAuthor(string $author)
    +int getUserId()
    +void setUserId(int $userId)
    +DateTime getUpdatedAt()
    +void setUpdatedAt(DateTime $updatedAt)
}

class User {
    -int $id
    -string $username
    -string $password
    -string $email
    -bool $isConfirmed
    -string $roles
    -DateTime $createdAt
    -int $userId

    +int getId()
    +void setId(int $id)
    +int getUserId()
    +void setUserId(int $userId)
    +DateTime getCreatedAt()
    +void setCreatedAt(DateTime $createdAt)
    +bool isConfirmed()
    +void setIsConfirmed(bool $isConfirmed)
    +string getRoles()
    +void setRoles(string $roles)
    +string getEmail()
    +void setEmail(string $email)
    +string getPassword()
    +void setPassword(string $password)
    +string getUsername()
    +void setUsername(string $username)
}

class Comment {
    -int $commentId
    -string $content
    -int $postId
    -int $userId
    -bool $isConfirmed
    -string $username
    -string $postTitle

    +int getCommentId()
    +void setCommentId(int $commentId)
    +string getContent()
    +void setContent(string $content)
    +int getPostId()
    +void setPostId(int $postId)
    +int getUserId()
    +void setUserId(int $userId)
    +string getUsername()
    +void setUsername(string $username)
    +bool isConfirmed()
    +void setIsConfirmed(bool $isConfirmed)
    +string getPostTitle()
    +void setPostTitle(string $postTitle)
}

Post --> User : belongs to
Comment --> Post : relates to
Comment --> User : written by

@enduml
